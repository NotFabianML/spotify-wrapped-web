---
import type { User } from "@auth/core/types";
import TopArtists from "@/components/cards/TopArtists.astro"; 
import TopTracks from "@/components/cards/TopTracks.astro"; 
import { getToken, getTopData } from "@/pages/api/Spotify.json";

interface Props {
  user: User;
}

const { user } = Astro.props as Props;

const accessToken = await getToken();
// const accessToken = 'BQAmAiiY2JUAw0nsVFolnm4NpK8ImQ5jy06OPoS5JOVjzGWwSw5ShKePVXVBqSZfOJuVeDTT9Orsx-hqggXpwddoz4tGVZo6LKdeZkXrAvg259ClFvZaGxF_8h7yq5prTXbkKQML-Hx2mEG4edhGoWJYS4CMVNBfqNuiuUqdIcYoa1zixyol6xNsKT_wuOZaFelKLpVyY4vfUS1V';
console.log("Access token: " + accessToken.access_token.toString());

const topArtists = await getTopData("artists", accessToken.toString());
console.log("Top artists: " + JSON.stringify(topArtists.items)); 
---

<section>
  <h1 class="text-white">Sesion iniciada correctamente - {user.id}</h1>
  <button id="logout" class="text-sm font-light text-yellow-300">Cerrar sesi√≥n</button>
  <p class="text-white my-10">
    {topArtists.items.map(artist => artist.name).join(', ')}
  </p>

  <div class="grid auto-rows-[192px] grid-cols-3 gap-4">
    {[...Array(7)].map((_, i) => (
      <div
        
        class={`row-span-1 rounded-xl border-2 border-slate-400/10 bg-neutral-100 p-4 dark:bg-neutral-900 ${
          i === 3 || i === 6 ? "col-span-2" : ""
        }`}
      ></div>
    ))}
  </div>
</section>

<script>
  import { $ } from "@/lib/dom-selector"

const { signOut } = await import("auth-astro/client")
const $logout = $("#logout")

if ($logout) $logout.onclick = () => signOut()
</script>
